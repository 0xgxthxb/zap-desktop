// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component.UI.Input should render correctly 1`] = `
.c2 {
  box-sizing: border-box;
  margin: 0;
  min-width: 0;
  display: block;
  width: 100%;
  padding: 8px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-size: inherit;
  line-height: inherit;
  border: 1px solid;
  border-radius: default;
  color: inherit;
  background-color: transparent;
  border-width: 1px;
  border-style: solid;
  border-color: #959595;
  border-radius: 5px;
  background-color: transparent;
  color: #ffffff;
  font-family: Roboto,system-ui,sans-serif;
  font-size: 13px;
  font-weight: 300;
  width: 100%;
  outline: none;
  cursor: text;
  position: relative;
  line-height: 1;
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  border-color: #959595;
}

.c2::-webkit-search-decoration:hover,
.c2::-webkit-search-cancel-button:hover {
  cursor: pointer;
}

.c2:disabled {
  background-color: #95959533;
  opacity: 0.6;
}

.c2:-moz-read-only {
  opacity: 0.6;
}

.c2:read-only {
  opacity: 0.6;
}

.c2:not([read-only]):not([disabled]):focus {
  border-color: #fd9800;
}

.c0 {
  box-sizing: border-box;
  margin: 0;
  min-width: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 {
  box-sizing: border-box;
  margin: 0;
  min-width: 0;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<form
  onKeyDown={[Function]}
  onReset={[Function]}
  onSubmit={[Function]}
>
  <div
    className="c0"
  >
    <div
      className="c1"
    >
      <input
        className="c2"
        disabled={false}
        name="name"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        required={false}
        value=""
      />
    </div>
  </div>
</form>
`;
